------------ whats is javascript :
JavaScript was initially created to “make web pages alive”.

The programs in this language are called scripts. They can be written right in a web page’s HTML and run automatically as the page loads.

Scripts are provided and executed as plain text. They don’t need special preparation or compilation to run.

جی اس در ابتدا برای "زنده کردن صفحات وب " ساخته شد
برنامه ای که با این زبان ساخته میشود اسکریپت نامیده میشود .
کد های جی اتس را میتوان مستقیما درون صفحات "اچ تی ام ال" نوشت  و سپس خودش به محض اینکه محتوای صفحه
لود شد اجرا میشود

------------------- javascript engine :
Today, JavaScript can execute not only in the browser, but also on the server,
 or actually on any device that has a special program called the JavaScript engine.

 امروزه جاوا اسکریپت نه تنها در مرورگر ها بلکه حتی ئر سرور و درواقع هرجایی که برنامه مخصوصی به اسم 
 موتور جاوا اسکریپت وجود داشته باشد کار میکند .

 A JavaScript engine is a computer program that executes JavaScript 
 code and converts it into computer understandable language.

 یک موتور جاوا اسکریپت یک نرم افزار است که که کد جی اس را تبدیل به کد قابل فهم برای کامپیوتر میکند


 ------------- existing javascript engines :
 موتور های مختلفی وجود دارند که بعضی از آنها عبارتند از :
 V8 – in Chrome, Opera and Edge.
SpiderMonkey – in Firefox.
…There are other codenames like “Chakra” for IE, “JavaScriptCore”, “Nitro” and “SquirrelFish” for Safari, etc.

The browser has an embedded engine sometimes called a “JavaScript virtual machine”.
مرورگر یک موتور جاسازی شده دارد که گاها به آن موتور مجاز جاوا اسکریپت گفته میشود

*** مرور گر موتور جاوا اسکریپت نیست بلکه موتور مجاز جی اس در آن جاسازی شده است


-------- how javascript engine works summary :

طرز کار موتور ها به صورت خلاصه :

1- The engine (embedded if it’s a browser) reads (“parses”) the script.
2- Then it converts (“compiles”) the script to the machine language.
3- And then the machine code runs, pretty fast.

1- موتور مربوطه کد را میخواند 
2- سپس آن را تبدیل به زبان ماشین میکند
3 - سپس کامپیوتر کد را اجرا میکند

* The engine applies optimizations at each step of the process. 
It even watches the compiled script as it runs, analyzes the data that flows through it,
and further optimizes the machine code based on that knowledge.

----------------------





javascript does not provide low-level access to memory or CPU, because it was initially created for browsers
which do not require it.

جاوا اسکریپت دسترسی های عمیق به چیز هایی مثل  مموری 
و پردازنده را فراهم نمیکند زیرا از ابتدا برای مرورگر ها ساخته شده
و مرورگر ها نیز ، نیاز به چنین دسترسی هایی ندارند .

قابلیت های جاوا اسکریپت تا حد زیادی به محیطی که در آن اجرا میشود دارد
مثلا نود جی اس امکاناتی مثل خواندن و نوشتن فایل ها را به جاوااسکریپت میدهد
یا مرورگر دسترسی دستکاری در صفحات وب ، تعامل با کاربر 

کار هایی جاوااسکریپت در مرورگر میتواند انجام دهد : 
Add new HTML to the page, change the existing content, modify styles.
React to user actions, run on mouse clicks, pointer movements, key presses.
Send requests over the network to remote servers, download and upload files (so-called AJAX and COMET technologies).
Get and set cookies, ask questions to the visitor, show messages.
Remember the data on the client-side (“local storage”).

/////////////////////

javascript is a high-level , multi-paradigm, object-based , programming languge

high-level programming language : 

    "High-level language" refers to the higher level of abstraction from machine language.
    زبان سطح بالا به میزان انتزاع از زبان ماشین اشاره میکند 
    هرچه سطح زبان بالاتر باشد میزانی انتزاع نسبت به زبان ماشین بیشتر میشود .
    Rather than dealing with registers, memory addresses, and call stacks, high-level languages
    deal with variables, arrays, objects, complex arithmetic or boolean expressions,
    subroutines and functions, loops, threads, locks, and other abstract computer science concepts,
    with a focus on usability over optimal program efficiency. Unlike low-level assembly languages

        1 : we dont need to be worry about complex stuff like memory management 
        2 : SO => strong abstraction of  machine language.
        3 : SO => making the process of developing a program simpler and more understandable than when using a lower-level language.
        4 : AND => The amount of abstraction provided defines how "high-level" a programming language is.

object-based : 

    Object Based Languages:
        Object based languages supports the usage of object and encapsulation.
        They does not support inheritance or, polymorphism or, both.
        Object based languages does not supports built-in objects.
        Javascript, VB are the examples of object bases languages.
    
    Object Oriented Languages:
        Object Oriented Languages supports all the features of OOPS including inheritance and polymorphism.
        They support built-in objects.
        C#, Java, VB. Net are the examples of object oriented languages.

    multi-paradigm:
        we can use both ways to programming in JavaScript :
            1 - declarative(توصیفی از کاری که میخوایم برنامه در نهایت برامون انجام بده بدون توجه خاصی به اینکه چجوری میخواد انجامش بده و چه پروسه ای رو برای رسیدن به هدف قراره طی بشه) programming
            2 - imperative(امری دستوری و قدم به قدم) programming

